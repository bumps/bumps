name: Upload wheel to PyPI when a version tag is pushed

on:
  push:
    tags:
      - 'v*'

jobs:

  build-wheel:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[dev]

    - name: Create wheel
      run: python -m build --wheel --no-isolation

    - name: Upload wheel
      uses: actions/upload-artifact@v3
      with:
        name: wheel
        path: dist/bumps-*-py3-none-any.whl

  test-wheel:
    runs-on: ${{ matrix.cfg.os }}
    needs: build-wheel
    strategy:
      matrix:
        cfg:
          - { os: ubuntu-latest, py: 3.8 }
          - { os: ubuntu-latest, py: 3.9}
          - { os: ubuntu-latest, py: "3.10" }
          - { os: ubuntu-latest, py: 3.11 }
          - { os: ubuntu-latest, py: 3.12 }
          - { os: windows-latest, py: 3.9 }
          - { os: macos-latest, py: 3.9 }
      fail-fast: false
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.cfg.py }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.cfg.py }}

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov

    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: wheel
        path: dist

    - name: Install wheel for Windows configuration
      if: ${{ runner.os == 'Windows' }}
      run: |
        $wheel = Get-ChildItem -Path dist -Filter "bumps-*-py3-none-any.whl" | Select-Object -First 1
        python -m pip install $wheel.FullName
      shell: pwsh

    - name: Install wheel for configurations other than Windows
      if: ${{ runner.os != 'Windows' }}
      run: python -m pip install dist/bumps-*-py3-none-any.whl

    - name: Run tests
      run: pytest -v --ignore=bumps/webview

    - name: Check examples
      run: python check_examples.py --chisq

    - name: Check fitters
      run: python check_fitters.py

  upload-to-pypi:
    runs-on: ubuntu-latest
    needs: test-wheel
    steps:
    - name: Download wheel
      uses: actions/download-artifact@v3
      with:
        name: wheel
        path: dist
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
