name: Test and Publish to PyPI

on:
  push:
    branches: [master]
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  # Extract the Python version requirements from pyproject.toml,
  # requires that requires-python is set to a range, e.g. ">=3.9,<=3.13"
  get-pyproject-python-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.parse.outputs.versions }}
      min_python: ${{ steps.parse.outputs.min_python }}
      max_python: ${{ steps.parse.outputs.max_python }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Parse pyproject.toml
        run: |
          node ./.github/actions/get-pyproject-python-versions.mjs
        id: parse

  # Build a pure Python wheel and upload as an artifact
  build-wheel:
    runs-on: ubuntu-latest
    needs: get-pyproject-python-versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Checkout Random123
        uses: actions/checkout@v5
        with:
          repository: "DEShawResearch/random123"
          ref: v1.14.0
          path: bumps/dream/random123

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ needs.get-pyproject-python-versions.outputs.max_python }}

      - uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: build webview
        run: |
          cd bumps/webview/client
          npm install
          npm run build
      - name: Create the wheel
        run: uv build

      - name: Upload the wheel and source distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            dist/bumps-*-py3-none-any.whl
            dist/bumps-*.tar.gz
# Test the wheel on different platforms, test webview, and check docs build
  test:
    runs-on: ${{ matrix.os }}
    needs:
      - build-wheel
      - get-pyproject-python-versions
    env:
      DEFAULT_PYTHON: ${{ needs.get-pyproject-python-versions.outputs.max_python }}

    strategy:
      matrix:
        os: ["ubuntu-latest"]
        py: ${{ fromJson(needs.get-pyproject-python-versions.outputs.versions) }}
        include:
          - os: windows-latest
            py: "" # placeholder, will use default version
          - os: macos-latest
            py: ""
      fail-fast: false

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python ${{ matrix.py || env.DEFAULT_PYTHON}}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py || env.DEFAULT_PYTHON}}

      - name: Download the wheel
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: dist

      - name: Install the wheel
        run: |
          uv venv
          find dist -name "bumps-*-py3-none-any.whl" -exec uv pip install {}[dev] \;

      - name: Run tests
        run: uv run python -m pytest -v

      - name: Check examples
        run: uv run python check_examples.py --chisq

      - name: Check fitters
        run: uv run python check_fitters.py

      - name: Check that the docs build (linux only)
        if: ${{ matrix.py == env.DEFAULT_PYTHON && matrix.os == 'ubuntu-latest' }}
        run: |
          source .venv/bin/activate
          make -j 4 -C doc SPHINXOPTS="-W --keep-going -n" html

  # Upload wheel to PyPI only when a tag is pushed, and its name begins with 'v'
  upload-to-pypi:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      id-token: write
    steps:
      - name: Retrieve all artifacts
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
